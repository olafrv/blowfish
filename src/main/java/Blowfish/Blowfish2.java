/**
 *   Blowfish2.java
 *
 *   An implementation on Blowfish2 cipher algorithm in Java. 
 * 	 Twice S tables and uses 64-bit instead of 32-bits integers.
 *   It no longer works on 64-bit blocks but on 128-bit blocks like
 *   AES, with 64 rounds and key up to 4224 bits.
 *
 *   Based on:
 *    - Olaf Reitmaier (2009) at: https://github.com/olafrv/blowfish (Version 1)
 *    - Bruce Schneier (2009) at: http://www.schneier.com/paper-blowfish-fse.html
 *    - Dr. Herong Yang (2009) at: http://www.herongyang.com/crypto/cipher_blowfish.html 
 *    - Wikipedia (2009): http://en.wikipedia.org/wiki/Blowfish_(cipher)
 *    - DI Managment (2009): http://www.di-mgt.com.au/cryptopad.html
 *
 *   Copyright (C) Aug, 2024 - Olaf Reitmaier Veracierta <olafrv@gmail.com>
 *
 *   This program is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation, either version 3 of the License, or
 *   (at your option) any later version.
 *
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
package Blowfish;

import java.nio.ByteBuffer;
import java.util.Arrays;

import Blowfish.UInt128;
// import java.math.BigInteger;
 
public class Blowfish2{

	public Blowfish2(){
		reset();
	}

	public void reset(){
		//Create (newly) the P an S boxes arrays
		P = new long[64+2];
		S = new long[8][256];              
		/* Uncomment if you want to scramble P & S original arrays 
		 * because they are "static final" (not recommended)
		 */
		/*
			P = P_ORIGINAL;
			for (int i=0;i<8;i++){
				S[i] = S_ORIGINAL[i];
			}
		*/
		//Copy values from the original arrays (constant arrays)
		System.arraycopy(P_ORIGINAL,0,P,0,64+2);
		for (int i=0;i<8;i++){
			System.arraycopy(S_ORIGINAL[i],0,S[i],0,256);
		}
	}

    /* State values for this Blowfish cipher */
    private static final int UNINITIALIZED = 0;  
    private static final int INITIALIZING = 1;  
    private static final int INITIALIZED = 2;  

	/* The state of the Blowfish cipher */
	private int state = UNINITIALIZED;	

	/* Char/byte values used to pad the plain text to 16 bytes mutiples */
	private static final int [] PADDING_BYTES = {
		0x10, // padding index zero is never used
		0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,
		0x09,0x0A,0x0B,0x0C,0x0D,0x0E,0x0F,0x10
	};

	private long [] P; //Will be scrambled when initialized but copied from P_ORIGINAL
	private long [][] S; //Will be scrambled when initialized but copied from S_ORIGINAL
 
	/* P boxes based on PI digits in decimal format
	 * Unsigned integer of 64 bits (saved as long) 
	 */
	private final static long [] P_ORIGINAL = {
		0x243F6A8885A308D3L,0x13198A2E03707344L,0xA4093822299F31D0L,
		0x082EFA98EC4E6C89L,0x452821E638D01377L,0xBE5466CF34E90C6CL,
		0xC0AC29B7C97C50DDL,0x3F84D5B5B5470917L,0x9216D5D98979FB1BL,
		0xD1310BA698DFB5ACL,0x2FFD72DBD01ADFB7L,0xB8E1AFED6A267E96L,
		0xBA7C9045F12C7F99L,0x24A19947B3916CF7L,0x0801F2E2858EFC16L,
		0x636920D871574E69L,0xA458FEA3F4933D7EL,0x0D95748F728EB658L,
		0x718BCD5882154AEEL,0x7B54A41DC25A59B5L,0x9C30D5392AF26013L,
		0xC5D1B023286085F0L,0xCA417918B8DB38EFL,0x8E79DCB0603A180EL,
		0x6C9E0E8BB01E8A3EL,0xD71577C1BD314B27L,0x78AF2FDA55605C60L,
		0xE65525F3AA55AB94L,0x5748986263E81440L,0x55CA396A2AAB10B6L,
		0xB4CC5C341141E8CEL,0xA15486AF7C72E993L,0xB3EE1411636FBC2AL,
		0x2BA9C55D741831F6L,0xCE5C3E169B87931EL,0xAFD6BA336C24CF5CL,
		0x7A32538128958677L,0x3B8F48986B4BB9AFL,0xC4BFE81B66282193L,
		0x61D809CCFB21A991L,0x487CAC605DEC8032L,0xEF845D5DE98575B1L,
		0xDC262302EB651B88L,0x23893E81D396ACC5L,0x0F6D6FF383F44239L,
		0x2E0B4482A4842004L,0x69C8F04A9E1F9B5EL,0x21C66842F6E96C9AL,
		0x670C9C61ABD388F0L,0x6A51A0D2D8542F68L,0x960FA728AB5133A3L,
		0x6EEF0B6C137A3BE4L,0xBA3BF0507EFB2A98L,0xA1F1651D39AF0176L,
		0x66CA593E82430E88L,0x8CEE8619456F9FB4L,0x7D84A5C33B8B5EBEL,
		0xE06F75D885C12073L,0x401A449F56C16AA6L,0x4ED3AA62363F7706L,
		0x1BFEDF72429B023DL,0x37D0D724D00A1248L,0xDB0FEAD349F1C09BL,
		0x075372C980991B7BL,0x25D479D8F6E8DEF7L,0xE3FE501AB6794C3BL
	};

	/* S boxes based on PI digits in decimal format
	 * Unsigned integer of 64 bits (saved as long) 
     */
	private final static long [][] S_ORIGINAL = {
		{
			0x976CE0BD04C006BAL,0xC1A94FB6409F60C4L,0x5E5C9EC2196A2463L,
			0x68FB6FAF3E6C53B5L,0x1339B2EB3B52EC6FL,0x6DFC511F9B30952CL,
			0xCC814544AF5EBD09L,0xBEE3D004DE334AFDL,0x660F2807192E4BB3L,
			0xC0CBA85745C8740FL,0xD20B5F39B9D3FBDBL,0x5579C0BD1A60320AL,
			0xD6A100C6402C7279L,0x679F25FEFB1FA3CCL,0x8EA5E9F8DB3222F8L,
			0x3C7516DFFD616B15L,0x2F501EC8AD0552ABL,0x323DB5FAFD238760L,
			0x53317B483E00DF82L,0x9E5C57BBCA6F8CA0L,0x1A87562EDF1769DBL,
			0xD542A8F6287EFFC3L,0xAC6732C68C4F5573L,0x695B27B0BBCA58C8L,
			0xE1FFA35DB8F011A0L,0x10FA3D98FD2183B8L,0x4AFCB56C2DD1D35BL,
			0x9A53E479B6F84565L,0xD28E49BC4BFB9790L,0xE1DDF2DAA4CB7E33L,
			0x62FB1341CEE4C6E8L,0xEF20CADA36774C01L,0xD07E9EFE2BF11FB4L,
			0x95DBDA4DAE909198L,0xEAAD8E716B93D5A0L,0xD08ED1D0AFC725E0L,
			0x8E3C5B2F8E7594B7L,0x8FF6E2FBF2122B64L,0x8888B812900DF01CL,
			0x4FAD5EA0688FC31CL,0xD1CFF191B3A8C1ADL,0x2F2F2218BE0E1777L,
			0xEA752DFE8B021FA1L,0xE5A0CC0FB56F74E8L,0x18ACF3D6CE89E299L,
			0xB4A84FE0FD13E0B7L,0x7CC43B81D2ADA8D9L,0x165FA26680957705L,
			0x93CC7314211A1477L,0xE6AD206577B5FA86L,0xC75442F5FB9D35CFL,
			0xEBCDAF0C7B3E89A0L,0xD6411BD3AE1E7E49L,0x00250E2D2071B35EL,
			0x226800BB57B8E0AFL,0x2464369BF009B91EL,0x5563911D59DFA6AAL,
			0x78C14389D95A537FL,0x207D5BA202E5B9C5L,0x832603766295CFA9L,
			0x11C819684E734A41L,0xB3472DCA7B14A94AL,0x1B5100529A532915L,
			0xD60F573FBC9BC6E4L,0x2B60A47681E67400L,0x08BA6FB5571BE91FL,
			0xF296EC6B2A0DD915L,0xB6636521E7B9F9B6L,0xFF34052EC5855664L,
			0x53B02D5DA99F8FA1L,0x08BA47996E85076AL,0x4B7A70E9B5B32944L,
			0xDB75092EC4192623L,0xAD6EA6B049A7DF7DL,0x9CEE60B88FEDB266L,
			0xECAA8C71699A18FFL,0x5664526CC2B19EE1L,0x193602A575094C29L,
			0xA0591340E4183A3EL,0x3F54989A5B429D65L,0x6B8FE4D699F73FD6L,
			0xA1D29C07EFE830F5L,0x4D2D38E6F0255DC1L,0x4CDD20868470EB26L,
			0x6382E9C6021ECC5EL,0x09686B3F3EBAEFC9L,0x3C9718146B6A70A1L,
			0x687F358452A0E286L,0xB79C5305AA500737L,0x3E07841C7FDEAE5CL,
			0x8E7D44EC5716F2B8L,0xB03ADA37F0500C0DL,0xF01C1F040200B3FFL,
			0xAE0CF51A3CB574B2L,0x25837A58DC0921BDL,0xD19113F97CA92FF6L,
			0x9432477322F54701L,0x3AE5E58137C2DADCL,0xC8B576349AF3DDA7L,
			0xA94461460FD0030EL,0xECC8C73EA4751E41L,0xE238CD993BEA0E2FL,
			0x3280BBA1183EB331L,0x4E548B384F6DB908L,0x6F420D03F60A04BFL,
			0x2CB8129024977C79L,0x5679B072BCAF89AFL,0xDE9A771FD9930810L,
			0xB38BAE12DCCF3F2EL,0x5512721F2E6B7124L,0x501ADDE69F84CD87L,
			0x7A5847187408DA17L,0xBC9F9ABCE94B7D8CL,0xEC7AEC3ADB851DFAL,
			0x63094366C464C3D2L,0xEF1C18473215D808L,0xDD433B3724C2BA16L,
			0x12A14D432A65C451L,0x50940002133AE4DDL,0x71DFF89E10314E55L,
			0x81AC77D65F11199BL,0x043556F1D7A3C76BL,0x3C11183B5924A509L,
			0xF28FE6ED97F1FBFAL,0x9EBABF2C1E153C6EL,0x86E34570EAE96FB1L,
			0x860E5E0A5A3E2AB3L,0x771FE71C4E3D06FAL,0x2965DCB999E71D0FL,
			0x803E89D65266C825L,0x2E4CC9789C10B36AL,0xC6150EBA94E2EA78L,
			0xA6FC3C531E0A2DF4L,0xF2F74EA7361D2B3DL,0x1939260F19C27960L,
			0x5223A708F71312B6L,0xEBADFE6EEAC31F66L,0xE3BC4595A67BC883L,
			0xB17F37D1018CFF28L,0xC332DDEFBE6C5AA5L,0x6558218568AB9702L,
			0xEECEA50FDB2F953BL,0x2AEF7DAD5B6E2F84L,0x1521B62829076170L,
			0xECDD4775619F1510L,0x13CCA830EB61BD96L,0x0334FE1EAA0363CFL,
			0xB5735C904C70A239L,0xD59E9E0BCBAADE14L,0xEECC86BC60622CA7L,
			0x9CAB5CABB2F3846EL,0x648B1EAF19BDF0CAL,0xA02369B9655ABB50L,
			0x40685A323C2AB4B3L,0x319EE9D5C021B8F7L,0x9B540B19875FA099L,
			0x95F7997E623D7DA8L,0xF837889A97E32D77L,0x11ED935F16681281L,
			0x0E358829C7E61FD6L,0x96DEDFA17858BA99L,0x57F584A51B227263L,
			0x9B83C3FF1AC24696L,0xCDB30AEB532E3054L,0x8FD948E46DBC3128L,
			0x58EBF2EF34C6FFEAL,0xFE28ED61EE7C3C73L,0x5D4A14D9E864B7E3L,
			0x42105D14203E13E0L,0x45EEE2B6A3AAABEAL,0xDB6C4F15FACB4FD0L,
			0xC742F442EF6ABBB5L,0x654F3B1D41CD2105L,0xD81E799E86854DC7L,
			0xE44B476A3D816250L,0xCF62A1F25B8D2646L,0xFC8883A0C1C7B6A3L,
			0x7F1524C369CB7492L,0x47848A0B5692B285L,0x095BBF00AD19489DL,
			0x1462B17423820D00L,0x58428D2A0C55F5EAL,0x1DADF43E233F7061L,
			0x3372F0928D937E41L,0xD65FECF16C223BDBL,0x7CDE3759CBEE7460L,
			0x4085F2A7CE77326EL,0xA607808419F8509EL,0xE8EFD85561D99735L,
			0xA969A7AAC50C06C2L,0x5A04ABFC800BCADCL,0x9E447A2EC3453484L,
			0xFDD567050E1E9EC9L,0xDB73DBD3105588CDL,0x675FDA79E3674340L,
			0xC5C43465713E38D8L,0x3D28F89EF16DFF20L,0x153E21E78FB03D4AL,
			0xE6E39F2BDB83ADF7L,0xE93D5A68948140F7L,0xF64C261C94692934L,
			0x411520F77602D4F7L,0xBCF46B2ED4A10068L,0xD40824713320F46AL,
			0x43B7D4B7500061AFL,0x1E39F62E97244546L,0x14214F74BF8B8840L,
			0x4D95FC1D96B591AFL,0x70F4DDD366A02F45L,0xBFBC09EC03BD9785L,
			0x7FAC6DD031CB8504L,0x96EB27B355FD3941L,0xDA2547E6ABCA0A9AL,
			0x28507825530429F4L,0x0A2C86DAE9B66DFBL,0x68DC1462D7486900L,
			0x680EC0A427A18DEEL,0x4F3FFEA2E887AD8CL,0xB58CE0067AF4D6B6L,
			0xAACE1E7CD3375FECL,0xCE78A399406B2A42L,0x20FE9E35D9F385B9L,
			0xEE39D7AB3B124E8BL,0x1DC9FAF74B6D1856L,0x26A36631EAE397B2L,
			0x3A6EFA74DD5B4332L,0x6841E7F7CA7820FBL,0xFB0AF54ED8FEB397L,
			0x454056ACBA489527L,0x55533A3A20838D87L,0xFE6BA9B7D096954BL,
			0x55A867BCA1159A58L,0xCCA9296399E1DB33L,0xA62A4A563F3125F9L,
			0x5EF47E1C9029317CL,0xFDF8E80204272F70L,0x80BB155C05282CE3L,
			0x95C11548E4C66D22L,0x48C1133FC70F86DCL,0x07F9C9EE41041F0FL,
			0x404779A45D886E17L,0x325F51EBD59BC0D1L,0xF2BCC18F41113564L,
			0x257B7834602A9C60L,0xDFF8E8A31F636C1BL,0x0E12B4C202E1329EL,
			0xAF664FD1CAD18115L,0x6B2395E0333E92E1L,0x3B240B62EEBEB922L,
			0x85B2A20EE6BA0D99L,0xDE720C8C2DA2F728L,0xD012784595B794FDL,
			0x647D0862E7CCF5F0L,0x5449A36F877D48FAL,0xC39DFD27F33E8D1EL,
			0x0A476341992EFF74L
		},
		{
			0x3A6F6EABF4F8FD37L,0xA812DC60A1EBDDF8L,0x991BE14CDB6E6B0DL,
			0xC67B55106D672C37L,0x2765D43BDCD0E804L,0xF1290DC7CC00FFA3L,
			0xB5390F92690FED0BL,0x667BA0FBCEDB7D9CL,0xA091CF0BD9155EA3L,
			0xBB132F88515BAD24L,0x7B9479BF763BD6EBL,0x37392EB3CC115979L,
			0x8026E297F42E312DL,0x6842ADA7C66A2B3BL,0x12754CCC782EF11CL,
			0x6A124237B79251E7L,0x06A1BBE64BFB6350L,0x1A6B101811CAEDFAL,
			0x3D25BDD8E2E1C3C9L,0x444216590A121386L,0xD90CEC6ED5ABEA2AL,
			0x64AF674EDA86A85FL,0xBEBFE98864E4C3FEL,0x9DBC8057F0F7C086L,
			0x60787BF86003604DL,0xD1FD8346F6381FB0L,0x7745AE04D736FCCCL,
			0x83426B33F01EAB71L,0xB08041873B005E5FL,0x77A057BEBDE8AE24L,
			0x55464299BF582E61L,0x4E58F48FF2DDFDA2L,0xF474EF388789BDC2L,
			0x5366F9C3C8B38E74L,0xB475F25546FCD9B9L,0x7AEB26618B1DDF84L,
			0x846A0E79915F95E2L,0x466E598E20B45770L,0x8CD55591C802DE4CL,
			0xB90BACE1BB8205D0L,0x11A862487574A99EL,0xB77F19B6E0A9DC09L,
			0x662D09A1C4324633L,0xE85A1F0209F0BE8CL,0x4A99A0251D6EFE10L,
			0x1AB93D1D0BA5A4DFL,0xA186F20F2868F169L,0xDCB7DA83573906FEL,
			0xA1E2CE9B4FCD7F52L,0x50115E01A70683FAL,0xA002B5C40DE6D027L,
			0x9AF88C27773F8641L,0xC3604C0661A806B5L,0xF0177A28C0F586E0L,
			0x006058AA30DC7D62L,0x11E69ED72338EA63L,0x53C2DD94C2C21634L,
			0xBBCBEE5690BCB6DEL,0xEBFC7DA1CE591D76L,0x6F05E4094B7C0188L,
			0x39720A3D7C927C24L,0x86E3725F724D9DB9L,0x1AC15BB4D39EB8FCL,
			0xED54557808FCA5B5L,0xD83D7CD34DAD0FC4L,0x1E50EF5EB161E6F8L,
			0xA28514D96C51133CL,0x6FD5C7E756E14EC4L,0x362ABFCEDDC6C837L,
			0xD79A323492638212L,0x670EFA8E406000E0L,0x3A39CE37D3FBF5CFL,
			0xABC277375AC52D1BL,0x5CB0679E4FA33742L,0xD382274099BC9BBEL,
			0xD5118E9DBF0F7315L,0xD62D1C7EC700C47BL,0xB78C1B6B21A19045L,
			0xB26EB1BE6A366EB4L,0x5748AB2FBC946E79L,0xC6A376D26549C2C8L,
			0x530FF8EE468DDE7DL,0xD5730A1D4CD04DC6L,0x2939BBDBA9BA4650L,
			0xAC9526E8BE5EE304L,0xA1FAD5F06A2D519AL,0x63EF8CE29A86EE22L,
			0xC089C2B843242EF6L,0xA51E03AA9CF2D0A4L,0x83C061BA9BE96A4DL,
			0x8FE51550BA645BD6L,0x2826A2F9A73A3AE1L,0x4BA99586EF5562E9L,
			0xC72FEFD3F752F7DAL,0x3F046F6977FA0A59L,0x80E4A91587B08601L,
			0x9B09E6AD3B3EE593L,0xE990FD5A9E34D797L,0x2CF0B7D9022B8B51L,
			0x96D5AC3A017DA67DL,0xD1CF3ED67C7D2D28L,0x1F9F25CFADF2B89BL,
			0x5AD6B4725A88F54CL,0xE029AC71E019A5E6L,0x47B0ACFDED93FA9BL,
			0xE8D3C48D283B57CCL,0xF8D5662979132E28L,0x785F0191ED756055L,
			0xF7960E44E3D35E8CL,0x15056DD488F46DBAL,0x03A161250564F0BDL,
			0xC3EB9E153C9057A2L,0x97271AECA93A072AL,0x1B3F6D9B1E6321F5L,
			0xF59C66FB26DCF319L,0x7533D928B155FDF5L,0x035634828ABA3CBBL,
			0x28517711C20AD9F8L,0xABCC5167CCAD925FL,0x4DE817513830DC8EL,
			0x379D58629320F991L,0xEA7A90C2FB3E7BCEL,0x5121CE64774FBE32L,
			0xA8B6E37EC3293D46L,0x48DE53696413E680L,0xA2AE0810DD6DB224L,
			0x69852DFD09072166L,0xB39A460A6445C0DDL,0x586CDECF1C20C8AEL,
			0x5BBEF7DD1B588D40L,0xCCD2017F6BB4E3BBL,0xDDA26A7E3A5AFF45L,
			0x3E350A44BCB4CDD5L,0x72EACEA8FA6484BBL,0x8D6612AEBF3C6F47L,
			0xD29BE463542F5D9EL,0xAEC2771BF64E6370L,0x740E0D8DE75B1358L,
			0xF8721671AF537D5DL,0x4040CB084EB4E2CCL,0x34D2466A0115AF84L,
			0xE1B0042895983A1DL,0x06B89FB4CE6EA048L,0x6F3F3B823520AB82L,
			0x011A1D4B277228F8L,0x611560B1E7933FDCL,0xBB3A792B344525BDL,
			0xA08839E151CE794BL,0x2F32C9B7A01FBAC9L,0xE01CC87EBCC7D1F6L,
			0xCF0111C3A1E8AAC7L,0x1A908749D44FBD9AL,0xD0DADECBD50ADA37L,
			0x0339C32AC6913667L,0x8DF9317CE0B12B4FL,0xF79E59B743F5BB3AL,
			0xF2D519FF27D9459CL,0xBF97222C15E6FC2AL,0x0F91FC719B941525L,
			0xFAE59361CEB69CEBL,0xC2A8645912BAA8D1L,0xB6C1075EE3056A0CL,
			0x10D25065CB03A442L,0xE0EC6E0E1698DB3BL,0x4C98A0BE3278E964L,
			0x9F1F9532E0D392DFL,0xD3A0342B8971F21EL,0x1B0A74414BA3348CL,
			0xC5BE7120C37632D8L,0xDF359F8D9B992F2EL,0xE60B6F470FE3F11DL,
			0xE54CDA541EDAD891L,0xCE6279CFCD3E7E6FL,0x1618B166FD2C1D05L,
			0x848FD2C5F6FB2299L,0xF523F357A6327623L,0x93A8353156CCCD02L,
			0xACF081625A75EBB5L,0x6E16369788D273CCL,0xDE96629281B949D0L,
			0x4C50901B71C65614L,0xE6C6C7BD327A140AL,0x45E1D006C3F27B9AL,
			0xC9AA53FD62A80F00L,0xBB25BFE235BDD2F6L,0x71126905B2040222L,
			0xB6CBCF7CCD769C2BL,0x53113EC01640E3D3L,0x38ABBD602547ADF0L,
			0xBA38209CF746CE76L,0x77AFA1C520756060L,0x85CBFE4E8AE88DD8L,
			0x7AAAF9B04CF9AA7EL,0x1948C25C03FB8A8CL,0x01C36AE4D6EBE2F9L,
			0x90D4F869A65CDEA0L,0x3F09252DC208E69FL,0xB74E6132CE77E25BL,
			0x578FDFE33AC372E6L,0xB83ACB022002397AL,0x6EC6FB5BFFCFD4DDL,
			0x4CBF5ED1F43FE582L,0x3EF4E8232D152AF0L,0xE718C97059BD9820L,
			0x1F4A9D62E7A529BAL,0x89E1248D3BF88656L,0xC5114D0EBC4CEE16L,
			0x034D8A3920E47882L,0xE9AE8FBDE3ABDC1FL,0x6DA51E525DB2BAE1L,
			0x01F86E7A6D9C68A9L,0x2708FCD9293CBC0CL,0xB03C87F8A8AD2C2FL,
			0x00424EEBCACB452DL,0x89CC71FCD59C7F91L,0x7F0622BC6D8A08B1L,
			0x834D21326884CA82L,0xE3AACBF37786F2FAL,0x2CAB6E3DCE535AD1L,
			0xF20AC607C6B8E14FL,0x5EB4388E775014A6L,0x656665F7B64A43E4L,
			0xBA383D01B2E41079L,0x8EB2986F909E0CA4L,0x1F7B37772C126030L,
			0x85088718C4E7D1BDL,0x4065FFCE8392FD8AL,0xAA36D12BB4C8C9D0L,
			0x994FB0B714F96818L,0xF9A53998A0A178C6L,0x2684A81E8AE972F6L,
			0xB8425EB67A29D486L,0x551BD719AF32C189L,0xD5145505DC81D53EL,
			0x48424EDAB796EF46L,0xA0498F03667DEEDEL,0x03AC0AB3C497733DL,
			0x5316A89130A88FCCL,0x9604440ACEEB893AL,0x7725B82B0E1EF69DL,
			0x302A5C8EE7B84DEFL,0x5A31B096C9EBF88DL,0x512D788E7E4002EEL,
			0x87E02AF6C358A1BBL,0x02E8D7AFDF9FB0E7L,0x790E942A3B3C1ABAL,
			0xC6FFA7AF9DF796F9L,0x321BB9940174A8A8L,0xED22162CCFF1BB99L,
			0xDAA8D551A4D5E44BL,0xECDDE3ECA80DC509L,0x0393EEF272523D31L,
			0xD48E3A1C224EB65EL,0x6052C3A42109C32FL,0x052EE388ED9F7EA9L,
			0x91C62F9777B55BA0L
		},
		{
			0x150CBCA33AEC6525L,0xDF31838343A9CE26L,0x9362AD8B0134140BL,
			0x8DF5CF811E9FF559L,0x167F05643812F4E0L,0x588A52B0CBB8E944L,
			0xEF5B16A373C4EDA1L,0x7DFCFEEAF54BCBBEL,0x8773E3D2C531DCD0L,
			0x55C4672952774F3AL,0x57CA6BC0467D3A3BL,0x24778425B7991E9AL,
			0xDD825C26E452C8EEL,0xFCACDE1E84833AF3L,0x61211D031732C131L,
			0xCCADB247E606BE8CL,0x712B39F188B4EF39L,0x3A9FCDC5C5755169L,
			0x1FF6994F39829CB0L,0x110165733343CBEBL,0x61D3D0B444F30AEFL,
			0xA8AE73752A3A1C9DL,0xB4B70914D6AB250CL,0x853B7328495F948FL,
			0xD2A4ED8E6CF751E4L,0xC320BB75D9CAA0B3L,0x8BA562624E84B03FL,
			0xEEA8076E74A07FE5L,0x8039E00C36FFDAF8L,0x03731358B9E671B9L,
			0xDAC4CE1CB25B10EDL,0x4DD3D5B1FCF2B480L,0x4634F57925EAC400L,
			0xA9AC55EA728932DFL,0x06041D055D31F502L,0xC539C2E32B89D9DBL,
			0x5BCC0A98C05BFD6FL,0x1B2506222E21BE0EL,0x60973B04ECD54A67L,
			0xB54FE638A6ED6615L,0x981A910A5D92928DL,0xAC6FC697E73C63ADL,
			0x456EDF5F457A8145L,0x51875A64CD3099F1L,0x69B5F18A8C73EE0BL,
			0x5E57368F6C7AF4BBL,0x7A595926AAB49EC6L,0x8AC8FCFB8016CBDBL,
			0x8BBC1F476982C711L,0x85C7DA7A58811477L,0xCD67FAD1D764D9B4L,
			0xC81029505CD09DA5L,0x1BB1F14795167D80L,0x0366046DAF1DACA1L,
			0xA2247B2311301A54L,0x791D99C67A4FB7CFL,0x277449A409E57492L,
			0x35C9A57E5E7F500AL,0xB9A62A8AD5242A6BL,0xA13378599CDA3346L,
			0x148740474328BA08L,0xEB81D51F3248896AL,0x8007D85D0F6E8DDAL,
			0x8250BDAFCE2EE042L,0x897EE0225F003612L,0x3BA18F9026314076L,
			0x7824035A3B57E2D5L,0x8E78AED1E90DC600L,0x90C15EA624609519L,
			0xB72EC3F8663DDCEFL,0xEF574232194195B6L,0x20C9203FF993700EL,
			0xC1A44A7CBAEDE941L,0xF98AD4C4F8F43F26L,0xF060DD080EB9DF1DL,
			0x9B33618855EEB734L,0x6C56D0D433A0D6E4L,0x182885B21DAFB611L,
			0xF04D46F750CDCB91L,0x407B4733D7A2B343L,0x0269AC52B520773CL,
			0x8C910B9F7680E5F6L,0xC79AD874FD97CFE6L,0xDEB78FB3279EE2A1L,
			0x7428670533645AA5L,0x554438084F1FC8DCL,0x116CC402D4F14617L,
			0x6183CD9EE11D5B9EL,0x195D2523EF2F8E07L,0xD836767C44811938L,
			0xAD366C9FDAB0065BL,0x2C5BD6F663F7D10EL,0x79104BD1D7C3E497L,
			0x432DD056932F8F20L,0x878025A708E90347L,0xCDAC2120753A3201L,
			0x9C6BE2FD03F7B32BL,0x0AB85150D75A8F1EL,0x8FBF70ECE0C67DF9L,
			0x71F250E41ABB9BF0L,0x3F17F108EDBFDC76L,0x37DCD54A48CCE570L,
			0x8011BB358BC70BFBL,0x8194F91BD0816B10L,0x5B3FE6415C6C5D42L,
			0x39D03AD66881CC3BL,0x95ED2BBA9B2DF677L,0x7DB8057E0E1A306AL,
			0x9C73B22B0F6FAE4CL,0x1477324E85041C8AL,0x31F1B31CB03F5338L,
			0x3A3E70F003BDA3D7L,0x21507C16990FC0DCL,0xEC48EB1B6E5AA777L,
			0x9DC7E5750C9490FCL,0xE8B70BB69C2462DEL,0x58F9D6E286C90D9EL,
			0x393954BDB5F2A4FDL,0xA1CAD7C66DEDFC47L,0x4664D28514E21038L,
			0xA34AE5A60CC88295L,0x26D74884885A7DAAL,0xAB0E25AAE328DACFL,
			0x3D75CA5C9315B071L,0xA8F86A7A869A2A3BL,0x73C244966E32834BL,
			0x247DEE3AB3A3E118L,0x0E3E864B85639D62L,0x88B3363FB3A767E5L,
			0x4B847B5E39540816L,0x7538DE9741B0D6D8L,0xED77D7107636B96CL,
			0xF57D4C5B2066FFB3L,0x17877F49FF0478D2L,0x759AF12C0E64DCF8L,
			0x547B59F127BCEC3DL,0x18CE85B88418FE15L,0xF07CF6B4A5827EC1L,
			0xED2893DE8A5FE68BL,0x4E112D7347572CCBL,0xAF86678002E62D57L,
			0xE2994ED7B1C7EBA4L,0x01AAD3603470F655L,0x8F1BB1A1E9FC7E99L,
			0x995672B0A2FA5702L,0x15B4DE2A4F23088CL,0xF2F97EC938568716L,
			0x61A4FFCCF419CF11L,0xCCFACBCEBBCA28E3L,0x784DD43E1150DEE3L,
			0xBC060BA08223C3D9L,0x4BDA38C78D9A7575L,0x4C007EC0AB58EFBBL,
			0x5CC287D0F064EA5CL,0x85C0368AAF2AD213L,0x0EAAC3CDCE740241L,
			0xFB003622BFAA4ABBL,0x583B589762A96A1AL,0xD06C7F57FF53F144L,
			0xDD67F044D1C28282L,0x8BDA0388548D04D4L,0x4E4DAB2DB00734EEL,
			0xD46E84086EFCE2BDL,0x39C9FB1B50898815L,0xC67E79C49FDEDF05L,
			0x10DA0B2AF8B32839L,0x06C91AF07F24F3BCL,0xFB10760CB49F0850L,
			0xD2CC97D8EC63395BL,0x9DB31D42A7CEC064L,0xF90E398D479ACAB7L,
			0x07BE140A28F3754DL,0x728C72A3F53F82D5L,0xBDEFD866BF22F70BL,
			0x655E9A03A6F11D63L,0x4A7132F693E833A5L,0x5E9274B4015F4E35L,
			0x6A59DCDD9D1E85EFL,0x137D430AA6BE0B0FL,0x12A13EA30191692DL,
			0x91A1E7691CC2852DL,0xAEE7300FDAF3860EL,0x408AC32A6A50C876L,
			0x996E523B8C04F81BL,0x417F8595AA4CC582L,0xFCB3B8E23C2156FCL,
			0xCD71AECD32A95C70L,0x7924389BD1047541L,0x9516C77F3DF7F5A6L,
			0xB1384D6FCB22F10BL,0xBC73CA3B1EC4F4F4L,0xB9DEE7FB93A467F7L,
			0xD638221089A1405CL,0xFD2FB6A54BC618B6L,0x96F3BB267289FE18L,
			0xEB855796F09854D1L,0xDC9E8AFCAF106FDBL,0xF5A238571B1815CAL,
			0x0A6F7CB51513353FL,0x8AC43941D1600967L,0xBA7A830ACD6CE82CL,
			0x29AB1461C4BE5ECFL,0xBF756728EE1651D2L,0x8351FEF2D9A56503L,
			0x1160D3CCB0767848L,0x82FA32727DC7523BL,0x409D85E9F46167C9L,
			0xEF335BFEDE10E539L,0x360295CD5E0F347AL,0x9DC0DA0142AC93FCL,
			0x32C3BEC9171678B9L,0x4C78A82B7C2C748FL,0x3828095E064D62C9L,
			0xF49CB2BE9C9F0126L,0x321485CB4773E463L,0x0E24D3491B7D32E8L,
			0x5D15EE76A962F764L,0xDEB15D4574DB8D32L,0x099610F3B3BD25A7L,
			0x8A4A1E30E3A7F974L,0x11B6004CDA44BF5EL,0x9848711F5104ADE1L,
			0x4A3B2AC8CF048420L,0x2F073250BE5F1DCCL,0x59F58B34F5410B4BL,
			0x172EDC27C8B798C9L,0xE7FBA7BEE8131C63L,0x3DA9D7944FA593B6L,
			0x684A0C6BEA248658L,0x6A33F10A3A76F7C9L,0x490BCC010090EDACL,
			0x643FE36AA33A5490L,0xA3D5F8B48CF3FCE6L,0xF53EF83439DC6EEDL,
			0xCB7A2AD77357022BL,0xBDA4E4538DB6C313L,0x88DF6453A5E9EA24L,
			0x5DC52D198ABE6869L,0x6BDB8D96E21B92ABL,0x8C3DB835FFCEDFCAL,
			0xAE947E3B49A2B4BDL,0x298CCC36A3D7193BL,0x922D5A7ED0C5161DL,
			0xE4CD940BE06728C4L,0xEF5CB80D23E73708L,0x29C4FD6F93F61230L,
			0x4E30CF0507C74C09L,0xC04C1B3D943D5EC6L,0x03E1291945FDD157L,
			0x11348FB5CB36DBA1L,0xC5FE692324A33B0EL,0x499425F2FA87319CL,
			0x587D2E1DE3BF7A76L,0x3D1A1D39600D94E4L,0x88019070C7BAEDFDL,
			0x13733CC160299767L
		},
		{
			0xE3EDE1160BC75684L,0x44ABBD60A47D8E20L,0xC589A0633522CB00L,
			0xE87815164ACE93CCL,0x6B9E5D20A12CFE3DL,0x11371EEB584A4436L,
			0xA6DF8D4BB44831C6L,0x852C8C2A711EB439L,0x6DB68C03A9FB89F3L,
			0xFC170E64EA76B5B0L,0x8DBE0E5F805CAD36L,0x7530AC9C6CF68E35L,
			0x891A338814ED7939L,0xE8214B6BDB3206B1L,0xE4A66072C4497E62L,
			0xFC14BB667F4EC9A0L,0x5648857D9958EF6CL,0xCE2487DDB79E1FACL,
			0x49687EF7BFB13209L,0x72F4723CF6652529L,0xD291228D7308942BL,
			0xF00DE97DE596928CL,0xF7017FC9A08BF910L,0x1AB9C11568F592BEL,
			0xB48A4ECE91C1B9D0L,0x0BC340B19ED82B04L,0x435D352B0BD8FCEFL,
			0x3544FFDBB90F5CEEL,0xACB9B26C18141308L,0xF0D3923E920D0C84L,
			0x67D95EEE3D2892EEL,0xCBBF9791DAC6ABFAL,0x2107CA17EEB2D41FL,
			0x0A15B8536117F7F8L,0xE38EFD17847C5965L,0x299F455128902084L,
			0xE3C19C842DA0FC7FL,0x438542355030A02BL,0x09B20BFDA067ADC3L,
			0x207E8E2296B7B8C3L,0xAE2034D10DF42664L,0x8AEC66374C6A4CAFL,
			0x021C5E382756DF1FL,0xDAB397892E258D3FL,0xBBEB27F2593CA22CL,
			0x02F538557C761FBDL,0x5D1F93565BD28C1DL,0xF93CE73599B8AA44L,
			0x118489EF0E0ED804L,0x26E9A60FC55BA1A7L,0x2D592A941EE1BBCAL,
			0xF3E4EA86BB639898L,0x8A2C6F5594D4EF71L,0xD3DD68B3E2E12B5DL,
			0xE3A3F757D7EE1599L,0xA4C0E18D9997F82DL,0xBD32A8C683CB1B29L,
			0xA059953A4F92D812L,0xBB2289A9855D888CL,0x677D6EF341DA321AL,
			0x2B4FFC49B1821BD2L,0x0257E7E26F413397L,0xCB31728801CB390CL,
			0x3CB685B21CB3FBA1L,0x788DB8A125D301BBL,0x63BFFA8112F19D42L,
			0xA26082BE05E4E1ACL,0x2FA9937F2125AB76L,0xE5E315E2266C09BDL,
			0xDC5B8B66D671F135L,0x7F354193FABCB03AL,0x3C9D682D7F698313L,
			0x8BA04039FF140FDCL,0x312A0A394E8C9048L,0x1A2290ECB9F91D01L,
			0x28CD49E7AF451EC0L,0x0F6ADBDE5FFFC10AL,0xC53C8C75FA7DCF99L,
			0x01FC98CCB44CA6F3L,0x6BD7A58209C968C0L,0xAC23BCFD1A4FA2E1L,
			0x7FC86C6FB1B0E97CL,0x9ED901F601EAF9F0L,0x95F1081A1BEBBF37L,
			0xDB26CD0DA39B1F05L,0x4C6E73DF5FB3F0FAL,0x3EB86A198B26131CL,
			0xCAC5592422935EBDL,0x95EACD29BF617EFAL,0x2F41A05EFFE82B79L,
			0xA86A40EF4867CAE7L,0x9C39B9117A125986L,0xE37D32CE39DBCB51L,
			0x3F68378EB6844A13L,0x7CC5A27CA798F90CL,0x0620A80357EC10A5L,
			0xEB8432E5703111DEL,0xE859F372BE354560L,0x82656F21A2C57145L,
			0x14A9B7E1C553EA68L,0xD2D5DD6F9307BB8AL,0x14B7194207B5105CL,
			0x8184D3C3A12DDC77L,0x519F29673D8158CEL,0xB3C32CA30F77E983L,
			0x2128E5D7E296BBAAL,0xB3C36F108C02701BL,0x79799E52E875F1CFL,
			0xFADFFB023A68E76CL,0xB092A17C4F389380L,0x26649815211577DAL,
			0x64DF730E2B87A4FDL,0x1A5E4F14169CFCF2L,0xE076A65F976E635CL,
			0xDCAD57936E017E84L,0x2123F4ADCFE3E761L,0x7689CE9C7291B34AL,
			0x3128D6249BFEF6AFL,0xED98745FAD9BCAA0L,0xE48850A31635FB8BL,
			0x06FD57BD0D326219L,0x1746DFA4E85901E7L,0xAE9D5A4533D88A6DL,
			0x21EA70902DE52E47L,0x711024D7735E27C4L,0x8348E17F014190E7L,
			0xF6DF0D50C6700128L,0x5B70ECABA6A01C98L,0x1114AF3E1DD46FD6L,
			0x1E3C56823076FA3DL,0x642F2EB5A7C7C625L,0x75655A99C51920CDL,
			0xEFC5E07D1C996040L,0xE3048644EF5FC2BAL,0xF381235F5959D426L,
			0xB1485DBBF14BB82BL,0x340CA2AB7E8C3151L,0x5901BB9DD8C93107L,
			0x1693701C2F0FD38AL,0x2265D674ECC395FBL,0xF951CBE74CDE4AF9L,
			0x16DE85E3E0CB3310L,0x8B16C0143A0106FFL,0xF125B5B3CB45F407L,
			0x79E7389F5CD3A367L,0x5A80B1E4EDB17199L,0x436EA05A3E377949L,
			0x3A3D4ECDE00B34A0L,0xFFA49567F668FA93L,0x36BCAE2201E1C17CL,
			0xEAC3650F973AD8D5L,0x430DBB8D05F92104L,0x5641EDCE3AC26AFBL,
			0x786AFF702A2CACB4L,0xF6228018EEB3E205L,0x5223B6B884DA7B94L,
			0xF69CB1725661CED8L,0x52D65674BB06447DL,0x10D976884A4D4E2EL,
			0x85562963AFB9FD77L,0x3EB067C62ECCB316L,0xB715B82C4CD5704BL,
			0xFC48C9515A696AAAL,0x91CA3A2FC6C97B48L,0x1E1227EEEA5AAE0FL,
			0x1FCE1B1B0149C632L,0xFDD8AFD9F6466639L,0x645338F3EB8392C8L,
			0x3318915B53748398L,0xBB711937AFAA09E5L,0x5FC32FF1B3C1FE1DL,
			0xACA39DBE6F87B608L,0xBED2B1B1C036C554L,0x22DAAF24CAF4F53DL,
			0xF854E55A212471D9L,0x7D2D07779B25563BL,0x85ED851CDC95DBE4L,
			0x6FF966162C13E934L,0x0886BA4D85F776ECL,0x4FC3757CCC791C7DL,
			0x67171D83FE93E855L,0x650428C5A5D69909L,0x1A4AF2BC95B74227L,
			0x26AE05E937CC6E58L,0xB6EBF6A679FC9DBCL,0x6A289F831DB090A4L,
			0xFED906D8873153D8L,0x8D17068C2FCB255DL,0x9CE6F36322E5F0E9L,
			0x99505EC4777D1D28L,0xCEA31A15FC3F4432L,0x40EF079C4F26C32BL,
			0xF9C2CB89F0B40D03L,0x4F10DBC4BC83DE6DL,0xE34AE5CB8798EC34L,
			0x632D8651CC6CAF6BL,0xCE4797BD98CA8826L,0xC28D82EDC7BCD3B2L,
			0x2AFB56FFB2280BF9L,0x0FAA53BA70BB13F1L,0xB88C9BEE75F865DBL,
			0x65B9747600C27A47L,0x7147367E52B391D3L,0x9A10C6322889967AL,
			0xD667521FE7E68D9FL,0x41B14D505D608D8AL,0x2A8D5EE472197B7AL,
			0x9E0D40E0B7D84D86L,0x8FAEF64A9F40B830L,0x085A45BF37C66777L,
			0xDD26FE46494978CDL,0xC336AC136D0EF2D0L,0x93D63D524059298FL,
			0x758E39DEB59FB07AL,0x9F5087D97A5ABFA6L,0xEA89450159E9B256L,
			0x0B81091656CF23ACL,0x8BDD7C9476FA3428L,0x0CD33C02749D58A8L,
			0xC14D4DCE4D984D74L,0xBCEA2DF9BA5EE882L,0xFDFB1D43FA94D0CAL,
			0xEC038FBE3F78E4BCL,0x0C83727C60A40C3BL,0xB60283FD1A1F7DF8L,
			0x83647DDF5A6EA43AL,0x45E2C5FA1164677DL,0x12C2242292D83289L,
			0x67C64BB1516CF2FDL,0xDEFC03FA52D573DDL,0xF2DA185F6FCEF553L,
			0x280C9FAE8BEBE1C3L,0x5C4648C6AC8E2156L,0x39F3ACDDAAFF23ECL,
			0x426570EEFF59D494L,0x19C3BE0BD6F859FBL,0x23CE10871775DA1AL,
			0xBA648A66CCC808C4L,0x51BE41EA51A28FD8L,0x34DF5E938481F74FL,
			0x6100816D3340A466L,0x70548249C75E5120L,0xBA79702279A00748L,
			0x6F067133E39C6F68L,0xD4A56F6DE85BF670L,0x9BC03ABAA6FC1A71L,
			0x7896217952937711L,0x04CF9FD6C613F747L,0xADB4E5E44BD90F88L,
			0x994FD52DF174D699L,0x30042813012C0114L,0xF26207D02A6E2994L,
			0xD01EA8CA8B4289E4L,0x288B2E9FB77EC8C2L,0x062AB5EF441C44B9L,
			0x023017B24D33E3F7L
		},
		{
			0xC9C549126B629FC5L,0x13D2028D708FFC38L,0x99BF4A68002FA9F9L,
			0x959B2BDBBF79C584L,0x2A6AE3A9AF0DEF7FL,0x3961DFF94E0F2FC3L,
			0x375602F6CB38090EL,0xFF27FA5FB4361DADL,0x27F105C6FF7A86A7L,
			0x89C6A294797B99FDL,0x859C810D3E650654L,0xCD5FAEBDAA91E7A4L,
			0x80B70152513A0E3BL,0xF3D5225D6212305AL,0x0B2E2D04D6E0A998L,
			0xBC00734CB44E2BC4L,0xDF6923BF27418C14L,0x6B0D8E79BBC2202CL,
			0x4F5354ECCF70BFBDL,0x3004547DA9FC32F9L,0x284A7E7F49AB8971L,
			0x7C4C5273348AECA7L,0x4AF7B4566A7D274FL,0x41144E72C6576B5EL,
			0x94DE31E88FFF2C89L,0xC4B22594D0138A97L,0x63EFE7A453EA6DDFL,
			0xB611ECB4722FE373L,0xF819C4B88FC3DF60L,0x93E879D9871E50B2L,
			0x0AB6063FF823AB24L,0x1D753E36002FE0A2L,0x59155829A234E540L,
			0x2A3A5EF606E16C73L,0x398EED502BA793DFL,0xA2E4CD3D50E7C902L,
			0x455226EE9CC01966L,0xE783C5FAA4A03BB8L,0xE627076A6A926733L,
			0x7ECFF39F7A1F3091L,0x0CFB8FC622B3ED44L,0x3BF287327CC97604L,
			0x16588EBC87273BFDL,0x23AD2E3D79DC9FA4L,0x6F33F954DC3DDFAAL,
			0x8855135E2935EF4EL,0x980A08E4CADE1B0BL,0x0AE829C4B9832D25L,
			0x7E26508CB0E1D951L,0x014E05A1EFEF032AL,0x7D73E257F5E46436L,
			0x3EDDB5EABF92518CL,0xBEB2E77DE87FBEA2L,0xE774B1C87370FA54L,
			0x8212C2D3FD68BCD3L,0x80FDFEBF5965C349L,0x36E0BE298259B3C2L,
			0x7900B71C3BBDE591L,0x4BE48027CBABC230L,0x9AB8623D10F1DDB8L,
			0x67353FE74B23E082L,0x14D19143CD01BBD9L,0x9B8F27FEE6873317L,
			0xA80F9F28BE002243L,0x95E3326A1A5D0985L,0xE9CDFC8A83BB7D8BL,
			0xDD5BDCBFB6238048L,0xAC5DB086974C4A25L,0x3138A84A6EE55DF9L,
			0xB6AAFF87D1AAAB74L,0x7D882D01EAC51639L,0xB1D786708070B049L,
			0x2B2D6ACBBE60CA03L,0x7E9FB44B03BB7CDDL,0xD46CD6E2B7355F16L,
			0x28189952E1F24EF1L,0xAB1BB900C9ED265CL,0xE2D04CF2396E9E95L,
			0xE90B7C2BC71EDFBFL,0x2BFD0239BCAA1AE2L,0xD5A67AC75C09E06CL,
			0x1042C9914BD7A768L,0xB95D116A50577DF5L,0x4D5BA7FD9302A958L,
			0x10EFB35D7C44D04CL,0x2840CD3BBFE8A000L,0x6E1D0B91BF83166FL,
			0xC94BEADCE2A22661L,0x29F3DEC66D94A52BL,0x6DE8D82598C80D5AL,
			0xDBA35D1E9FC9976EL,0x70C6F78CCB1DC1ACL,0x5F89D50A1A0F5014L,
			0x89BA6ABE2675A341L,0x2E91CA2D639705C6L,0x0A1E10F5ECB1CDF8L,
			0xC6F4D4C76CA28E32L,0x6C1F1960E1FFBA3DL,0xFDABA7B749417CCBL,
			0x2EBE5734F41BB7B7L,0xFF1B3883F1C9AB13L,0xD2BB196566A38EFAL,
			0x7B512382658E0EA5L,0x935BB5D4A12A9BF7L,0x960FBAA2555C0B70L,
			0x3E525A53AED652B2L,0xB391181888F09E91L,0xEB9C20C7852CB5B6L,
			0xFE412D512E5FC6F7L,0xFCE8C877AEBF0456L,0x64E554384FAE86D3L,
			0x3F7FCB2D2961457AL,0xEAAA1911B7B127B4L,0xFB0705A22D459DC0L,
			0xE1BDFA1C0BFDEE98L,0xF87B87A9F83C326AL,0x5EF4FBCDA686CCD5L,
			0x3A6062109261F2CBL,0x6DE5ADF39C432638L,0xD3E5B2421AA14DF5L,
			0xB8C3E2A48D04B5ABL,0x353AD3256B300551L,0x2C293E7B5CD65ED1L,
			0xD1424A125365A941L,0x2D7DABF9A99A9EF0L,0xA22E73F4144C14B0L,
			0xB28D10B4DAEDEACEL,0xED1C674702891AF1L,0x97086B1018A4CF83L,
			0xE2BFABED37127735L,0x02F6EA6EE53CEE62L,0xABD1EE13E70FB008L,
			0xC74EF42B9A66ADC1L,0xB37D68BD31CF57BAL,0x50FE1D7E33412595L,
			0x5E1D0F55FF19FA60L,0x60BC42EF8A205D65L,0xF6C988FE294D1666L,
			0x58FBD06F63EB46E3L,0x6EF46444A4CDBE82L,0x8B5264728BD852F1L,
			0xBCAE0DB7DD7356F2L,0xA668BEA6E240D70CL,0x3B57508CB52C4041L,
			0x896E399798C84992L,0x55762FF107ED577EL,0x594A7E2FBCB2EB8FL,
			0x9AEBC80F2B38F26AL,0x43E6DD993FE053CBL,0xBD77A7E5122AEAADL,
			0xE7928B16D1212579L,0x095BD76F6E364AE7L,0x45C5C8EC7B9A739EL,
			0x192B00027D4F1F15L,0xC7370445FF3569DAL,0x4D89F2C82087874DL,
			0x3001B7CAB20DC804L,0x8E85FFCF7DE4AB5DL,0x3BA794F55A19ADE7L,
			0x1D485BEBF50C76DAL,0xE937C2354A69FF66L,0x65B0FDC5E27F9505L,
			0xFDEC5B5707A41CB5L,0x56226E58F0342F9DL,0xE47B29225D24BE40L,
			0x0708B0582DA0D569L,0xCAEACAFB626D88B6L,0xD9A23DDAFC49DE6CL,
			0x0E54F8C288AE7A36L,0x5A16100CF86D7CA0L,0x1B400779B429DCFFL,
			0xFFDB45E8FE03B385L,0x55883F5A18C4C190L,0x36080E4DE983C048L,
			0xA7619E4D5D7023BAL,0xEA1B4448FAE19DF1L,0x920A7A62FF9BE5DAL,
			0x8D630C913A8457B3L,0xC1317AAD19B125E4L,0x2AC60DA85EF6A4FCL,
			0x18453D57CBE16E34L,0x5B3D0DC184E910D3L,0x5989E958B02A738CL,
			0xA76A21342AE3153DL,0x6C9A6DA3A6B590C3L,0x9294F2B261FFD9FCL,
			0x5DC7ABBC0A085E11L,0x718F3BE7FD0598BFL,0x8552331CA17183ECL,
			0xC702CAA9151C171FL,0x02A6E9CD28FC2637L,0x1D79CE9FCA06C85DL,
			0xF990DF8D4704243DL,0x4A5C1F56FE965B3CL,0x603347ADDC37A650L,
			0x1CAE34EB5EBB9A97L,0x137D411F4DEFE9FEL,0x8B1E6D8B9D92A7DDL,
			0x5888051BBD7DE708L,0x2A05F513CD02F32DL,0xF37A6090024DF9AAL,
			0x3E9D2A7E829CFEF2L,0x61D25546792B1059L,0x1B042CABCC51561CL,
			0xBA6A92F3C9C23431L,0xDAFA0C012658242FL,0x15388A8C97D1C6E1L,
			0x1D75A986270AE314L,0x00AD6269F740DAF5L,0xE11ACD2629ED5C7DL,
			0x78B8E95513F8D4C2L,0x9B4216455EB07F9EL,0xDE96E41B398E740FL,
			0x47F4DBAA6AF2216BL,0xE324E52ED534622FL,0xBFA0F89B7BF36FA7L,
			0xAD459D4846671973L,0xBC8C0111A08779BFL,0xBF7E8F32F914239AL,
			0x7C039FA68DCBCC5CL,0xB2C77934F9D19EE2L,0x2014EFF97BF6F383L,
			0x18A1E15B762D0A76L,0xAB97671844F7D0F7L,0xD900ED19F558726FL,
			0xC40702BEFEF81427L,0x3C04AD1AA20E9FECL,0xA5994E7F4FAE1300L,
			0xC30D8C955DFFC1E9L,0x28B67F51321D79A4L,0x80805CDDCAAC217AL,
			0xC450000E76A4C407L,0xE6B11477FB29BA1FL,0xB6117B2EDB67EFDFL,
			0x90919CF5F2402660L,0x870990DEE6953D45L,0x59DCA2BBE1D1EFE0L,
			0x1AFC02321CB98FBDL,0x4D64D3E14F230A06L,0x6711320EA8A9F71AL,
			0xB30472183291CE32L,0x50E85B556358D19BL,0x75574349C061908AL,
			0xD8FD1AA7E4FC7A61L,0xC01E9492FB30E932L,0x8EE6D89FAA3D9A2EL,
			0xF8B5C1B7C0B0BA37L,0xD81FDFDD54EB3270L,0x9CD27406EB1FF9F7L,
			0x338CAE31F8B82E2FL,0x85FD727AB033FA40L,0xD702FBCBB7403203L,
			0xDE77DD60D4423BA3L,0x4C85C9518E850016L,0x7A70931FEE8600A5L,
			0xADBBA0197CD52986L
		},
		{
			0x626263A3B381D4D1L,0x28913CD012DA73DAL,0x6B41DD34C1ADA2FBL,
			0x8D97DA19B167ED9BL,0xB4812D4C5BB6CDA7L,0x669C5EB0AB412ED2L,
			0xD3C0D38280BCADE4L,0x961F99BE007375C9L,0xE1CD3F0D18427E6BL,
			0x2F8E1F31AC07916BL,0x0BCB45904214A966L,0x080DEA4FE4402AB8L,
			0x3164DA2C4EC6D4B3L,0xEC1AB3E0371AA403L,0x703CC4A2D61C9EAFL,
			0xDF938277B360CC64L,0xA809622ED1CA223AL,0x0D0C41C61FC1CB73L,
			0x6B1D07D0F7631F64L,0xCD6C472B23716169L,0x7C547D101DE31920L,
			0xB8AA5D5D5A08B84DL,0x8783FA268476EEC3L,0x4AD24805DEA948D4L,
			0xEFD4680DE1082145L,0x1F400A6F5CB25D7BL,0x5830BAE8DFC1B3DDL,
			0xA52EEAC39FA9E4E6L,0xE780295AA1FDA9CBL,0x05292076633BD6C1L,
			0x84F452863BCCD3F0L,0x0C0FFA13A48AC0E7L,0xC10B071D8F38B069L,
			0xFC797F140A0C843BL,0x55B2102F2B6F2CBAL,0x6A65ABF4BC13F3D5L,
			0x7AB981E9ED36BC8AL,0x01590DEDE28853A9L,0x880A305A45927BB5L,
			0xAD60BEC2758C9434L,0x4F5CC2D0842FFFA1L,0xB56BC910589D9119L,
			0x29510482F6B85BCBL,0x191C5E8C0AAC8F1DL,0x53AEE004B3A760B2L,
			0x6C47171AE122EE50L,0x8F882588C3AF791DL,0x3AB1E787787F23A2L,
			0x740A3D69F574F889L,0x563A7542EE0275A9L,0x1D4C7F0288B0F4BDL,
			0x0B6A095505C57B60L,0xFCDC13AC38250CC2L,0x7C0F6DD8FEE40397L,
			0x75D040BD4F8C08B0L,0xDA40BCD1AB461EA7L,0x0BB2664FB361B106L,
			0xFF88C17C7ECBBDF3L,0xCB397F5A34BD8C06L,0x2C79097E71DC4099L,
			0x0C7E28743703E385L,0x6B4E04AB3244D2E0L,0x7FB8C9F38282173FL,
			0x21AFABC5CA89F8C3L,0x3AA25BFAE9E1B88BL,0x77E8C0B888B0B2EEL,
			0x8D7E99220B214D8BL,0xE4C85444B026A4F2L,0xF29A85E1881A45A5L,
			0x73105CDEBCF4939AL,0x6B923A2FFAA6D9CDL,0x44EB8BB4794D87DFL,
			0x0A60094B3CB6F83CL,0x03661679A1F217E8L,0x963C57F0455BA773L,
			0x48ED66F36494C7AAL,0x0B20EAFD85EB9191L,0x1C890980EFA34C0DL,
			0xBDA11E825B6095DBL,0x3E193DB7CE3E5F19L,0xD52A1E3477B0CC82L,
			0x489DB03838376CC8L,0x3CEF20B0BC9F84E9L,0x70CB14480EC62200L,
			0x246227A4A55EE063L,0x7AF69EB03F5EA747L,0x39FA87659196B7F3L,
			0x81ECEEFE543BB263L,0x041009D0CF373731L,0x62836B24EEC15E94L,
			0xB498922DBAB7E562L,0xB8A4FCA94750926AL,0x880C34678827F078L,
			0xD9ADAD0A8D1D0854L,0x6F3054702D3DE155L,0xFFF92A2DA11FD9B0L,
			0x6B012A4C96009615L,0x95BD42D4CA1FF867L,0xB1B1B706A1B652C4L,
			0x606C1C06836140CCL,0x687393E9571F598BL,0x7FB3189C01008403L,
			0x196DC6E309DD3F96L,0x2EE2504E4FA033AFL,0x656EDD9C1C2898DAL,
			0x1CF705B8EBE7ED56L,0xA335F9DE920E0456L,0x176E632D59157144L,
			0x37B8036FBDE47E04L,0x8DB69C255B58351DL,0x75E3AD18FA15C435L,
			0xB88F8FA79E7ACD2EL,0xF4F1ADB22C44430AL,0xA6F667B7787DE551L,
			0x7F5A7205AAB32994L,0x415894996FFDADD7L,0x0066BB6CDDC58D69L,
			0x73355DBCC89631CFL,0x4431FD499E8875DBL,0x497D7F92A785C0A1L,
			0x9E1259957CD82824L,0x06AA4F3FE70CA2A2L,0x2089374C701AD9E5L,
			0x9232A152F12FA6F5L,0x8642D5B1E978751DL,0xB983D466746FC062L,
			0xB927B4CDD4A40163L,0xD318EFA72D4E8E2CL,0x0739C2B135066E85L,
			0x288D2F5EC554BB59L,0xE932090E1594B11DL,0x99AAE93439757411L,
			0xB6355EBE7352D0D5L,0xC55036D033D4CE1AL,0xCF62E455765770EDL,
			0xD35B32D0879CEC65L,0x4A7F75A91E55A387L,0xDBA77CCE6BBA86C5L,
			0xA5BD40453312CC34L,0xC873CF4AD2B21BDAL,0xFB57ACBBFFF82A86L,
			0x548532941E5C97F5L,0xC66A0BF8E8A5EBA2L,0x4263CE77F7EB6DE5L,
			0x2E8A6099FB9CB50CL,0x1D45AB6111B0DCB0L,0x7FE52FF300874786L,
			0x595B7D86EA04E95FL,0x02670CBA727270DCL,0xDA2647DCAC755BCCL,
			0x587200296A36C48AL,0xDCB2C01C8B852F55L,0x9437511867ECA888L,
			0xDA15A6EBE12F1ACAL,0x6BB01516C79BA56CL,0x59D5512650DA86FEL,
			0x2508641E00EFB3D8L,0x1082864880F8737BL,0xB353426A76C9620FL,
			0x1133CD70565B0C38L,0x4758F74C3AE9A9C7L,0x3C3158E934173FD8L,
			0x932EAB7FF21856F6L,0xEE6E49FA9C5D22BBL,0xF0D5647DA187773AL,
			0x12D8F8D9175D50B5L,0xCC1D89F26CA5F76BL,0xAD350118288382EFL,
			0x2E8209A98951707AL,0x429AC0E06E896040L,0x1FA39EAB38C767F8L,
			0x0DB3875C9089C512L,0xD833C218B2296004L,0x51D022375837CDA6L,
			0xB197EFD3310610ECL,0x96D9426A03DD99F1L,0xA668A96A49BD5595L,
			0x88B9C5A482DEF3CFL,0xCE29AA1123CE0CCEL,0xE8C5D1BEDFEB8F4CL,
			0x9FD5C941FA43F815L,0x71403B035037F8D6L,0xF96985771B6CAEF5L,
			0xB0CEAEF1407FA726L,0xDAE80323BC5687EEL,0xE766D91350438AB1L,
			0x83352D6317D820D4L,0x471FAF84D19B9D6BL,0xB68B6E05C551787AL,
			0x0D82CB9A2FD0ED0AL,0x9C9FA69B835533CFL,0x529708C8B631A586L,
			0xAE6E7D9A9A021C8DL,0x3776E16D46423ABDL,0xE26768F257FA285AL,
			0xD1064D1D8071EC0BL,0x87DD00CA296EC314L,0x55664BAA77126B71L,
			0x84923CEA48B80A5DL,0xCEEF0FB7CDBE63E8L,0xEE9CD1F8F1BA69D1L,
			0x630CB18DCEF9F6D6L,0x9ACCCFEC1E5B0B8BL,0xA7C603D6C1771990L,
			0x8D8CFCA125F0FC18L,0x21B3040B45983A58L,0x779277D37F6F40B7L,
			0xE00E05C70D0DD723L,0x2E06042A483503D1L,0x11E6C7594E2D37BCL,
			0xB05774BB3125D878L,0xF2F37B26D9686660L,0xEC467268C4B86304L,
			0xBCB60695B6C2FE57L,0xBD0F1F36040BE959L,0x3717E742E40C6ACBL,
			0x3CC4804C944F7A20L,0x460408E2E1B06095L,0xA670D0945BE59F3AL,
			0x302057B370FF72B1L,0xDA167250DCC3541CL,0x05640270451078B4L,
			0xB76AA32013FC0D9AL,0x46AEEECD80943D79L,0x40ECDF130731B4A1L,
			0x97AD3D679928A042L,0x504F5C189FA51C84L,0x4E87AFD137482693L,
			0xA2BADFB0FAFEA200L,0x1F87EA7EC1EC7232L,0x5AE7467498550A62L,
			0x46078EAF639D8B94L,0xFCD6039345449DC5L,0xF1D0921E12BBF3E1L,
			0xA8278D27BF1494D9L,0x3AAB6E1FDAA2078CL,0xA7056D8748FE8393L,
			0xEDE587F7AA7F0D10L,0x7CC2F685085F2B73L,0xAB013AA88CD2F44FL,
			0xE728EE7494DB1A90L,0x91E7AD1C7A9DC3A0L,0x0B50F837CCCA0AB9L,
			0x6F4FAF4B3591C776L,0x8ECEF7BB5EB62F62L,0x38B856766C7E761FL,
			0xA804C793B28B69D6L,0xE1ED19F49068CDB7L,0x49104B4C4DD93914L,
			0xD5EAB4E714DBDCCEL,0xC5CC85B5C060507FL,0xDB32425C0D97E0AAL,
			0x40982C04911C28C2L,0x2CC09E5BBEB228EBL,0x12D0EE550AE54C7FL,
			0xCDA4DBE4290E1192L
		},
		{
			0xC8E7EE2A6D35A85DL,0xE65C4BA2BDB172A3L,0x24E778560394EA96L,
			0xC2B27A43E3B8DE3AL,0x68851CA62A4E9602L,0x5C55530FE3B65709L,
			0x879085274307A299L,0x55EF07A5128D13E4L,0x9D725027DBFCE0D1L,
			0x1F0A36B7042A8604L,0xC0B998CFE7483209L,0x68C3492A53196622L,
			0x74AB18A58026E986L,0xB2A80581C9BB8E61L,0xF6BEA5D51868B77EL,
			0xFB9EEF919206448BL,0xD994BE0A28AB72B3L,0x9E4F201F17E3A924L,
			0xE417494C2B40948BL,0xF181F1AD48176EC8L,0x4E6DFACE8A54167EL,
			0x03EAE7EBCCD76504L,0xADB580CF9AEFD7ECL,0xC95F10516FC1822CL,
			0x16B4DBCA7E2AF7B6L,0x4C2C1E92A3FD8B1EL,0x2C47E98AF402DB8FL,
			0x41B35ECC6648A3F4L,0x3E6304DBBAB7D72FL,0x7FC1AAEAF908800EL,
			0x221D7A4945772D5BL,0x2C2E0622FC7D0EBAL,0x9642246B05B23630L,
			0x0A7B0F45486B606DL,0x13177F6FCE892312L,0xD1CB0F1F6DFCC606L,
			0xAA78E533377B4884L,0xD6B52F4A8C9E2A60L,0x99B73FD0ACE073ACL,
			0x6C15A0193AB9C716L,0xDFC2B9DAB731F594L,0x346570BDBEEFF775L,
			0x72C4AA3D7F315855L,0x33A724C96D575675L,0x048D4945B24864EBL,
			0x4A133231D8592CC0L,0xD5C73DB05E524096L,0x37FF9F3C0083DDB2L,
			0x62CF329FB4CA2C7AL,0xFA32EB7340C80018L,0x44A0BEBCC3FF0AF4L,
			0xE69FDA32090494F2L,0x5BC6B8759CD4735DL,0xEBD794C34F999AC3L,
			0x15EC4AB381966658L,0x04227560AAD6E119L,0x666F53B1C2D0E5CFL,
			0xFDA528678C635D9AL,0xA95E2B06AF981F38L,0xAC8D213BAF14763EL,
			0x618980C706184FD8L,0x065FB48BFBED58F2L,0x3530BF7072F45B25L,
			0x63496CF13DA894A7L,0x10B0AAB9B53D00D5L,0xC94D06690A504E9FL,
			0xB0188F98A1416C8FL,0xD617690189DB2B89L,0xD6C5973072B0D296L,
			0x41C5AF732550CA99L,0x1F14A4CD472685D4L,0x7FF0EB3059940A8FL,
			0x6AD4BB06B2CFC19AL,0x26CAAFF27D31965BL,0x24BAC753CA8C7495L,
			0x0BD00E001AD03531L,0xC85A61F41B4F63BFL,0xC069E56EA641FC8BL,
			0x58F03B9F82249453L,0x3845C8E628849C2CL,0x35A07EAA2B311D24L,
			0xBD87A6CAA8808EE4L,0x6132969AF471FEEEL,0xAD3CA83EFFC050F2L,
			0x92F28FADFE9548EEL,0x4A445E95E2B96A7FL,0x0CD740D338AC4E9EL,
			0x22CBDBA02CACEE06L,0x2EF0B47ED4A26551L,0x95162DFE6F77218EL,
			0x949BBE6E2C5E18CBL,0xD858457AE86AEB8FL,0x70160C4C32FCC035L,
			0xDA1B117537022CC1L,0x4155B446242E9516L,0x0EBB3A91C05F6DC1L,
			0x72CE4A139155F85EL,0x968D1D2BE2202DAAL,0x0DD112E69A43590BL,
			0x54571D7106AA1177L,0x8185CF7C873A83D2L,0xB60E081435FC7665L,
			0x1119443E61477BCDL,0xBE341A447FBF3154L,0x207BB1320C48C47FL,
			0x4ABDA6DE378E0293L,0x6107CEF20273CE94L,0xDB975B82DE2E74B7L,
			0xB5C328A45210420AL,0xFD5DB064FF0CE588L,0xA13D0310EA1451F2L,
			0x43B7383D053E52AEL,0x0E8EF259EB10920AL,0xAD3AD1E9745478B4L,
			0x6205B40C776A6AF2L,0x555382797179A5A3L,0x2FFE1524EFCC58F9L,
			0x7CF888C7BC0799F2L,0xCDA43BA405DDBB75L,0xB5477636677732F6L,
			0x01319EC2188D7305L,0xC304C3C9C905CE9CL,0xF1FE7A84086D9818L,
			0x33FFC90248AFEFECL,0x5F936E7E0B73F2A5L,0x997533FE57D3D2BCL,
			0xA8727C21D3025478L,0xB9A5ECB6D2B53213L,0xA719EC619141CF64L,
			0x575191E04E65313AL,0xE939E987FCC67DC8L,0xE311DC20B4BF98CAL,
			0x83B18F3FE3C6B19AL,0x45A3F7DBE43309F2L,0x29C88527BB7E1798L,
			0x9BD9065395ED5092L,0x3AFA47133CB87F2FL,0x79D33156F2A0AEB5L,
			0x4E391928829ED724L,0x45976E853A57156CL,0x274ECB26774225DCL,
			0xF01D518D64D90A76L,0xB7AA9CD93BDF7DFCL,0x675187C1DDE860D2L,
			0x5B27441797399AA3L,0x34A484AE25A7D8CCL,0x3313743EEA047C38L,
			0x6642F851A39F0FE0L,0x7E784F26458566B6L,0x1667EB5A365039B7L,
			0x320CD5C287747C42L,0xC500626988237C54L,0x1900CD551BEA8F06L,
			0x1CB2EB6D1009C5F8L,0xFE4467CE9DE6B84CL,0x474907E7E930D4DEL,
			0x9A03748021094135L,0x1D01A2CD1671E5E7L,0xEA36E4D4BAEE3186L,
			0xFDC80A189B81415BL,0xF05E5C2CEAD51307L,0xB10BF4AB1BF091DDL,
			0x9A360064E7EFF780L,0x002D8FD679033659L,0x2CB6755A67B7F1A9L,
			0x74289C32DAC31036L,0x8B43C5F7E46D7626L,0xA5824FF7A1C04253L,
			0xBE299B6E486689D6L,0xA6A36640B0E7ED10L,0xEFCE1B3B69319579L,
			0xA4C7511EEF2E25D6L,0xE734535A0A39E4D7L,0x0D4058B97CBA88FFL,
			0x3FA7B14B24CDC6CDL,0x97B32577F69EE7D2L,0xF456EADE82A767FBL,
			0x0010AE7A6C3454D4L,0x35A647CF2DFE414FL,0x5F939DE1E6B3A564L,
			0x761CD4B5F4B8F9DEL,0x32701D9F38859564L,0x927008126BC94ED2L,
			0x04CA39A82D3EE4A0L,0x26FF262BE4C1CD83L,0xD8171EDC5EAF11B2L,
			0xE67378C44FB8DBBEL,0x43821B229ED5B95DL,0xF7049AAC3635CBE4L,
			0x1C4DDDB37B9AFD05L,0xF0CBF5B4691CD3D3L,0x6976C062ED0FFE99L,
			0xD936DB478E654D9BL,0x22F34DBE8B13F2E7L,0xCCB7DC2DE2731B06L,
			0x85F8BD4FCBDF97FAL,0x02FAB7045B1C055FL,0x97A94E31DB778B87L,
			0x2882DF5FC805577DL,0xB695D74F9A30DE4AL,0x0CF049C0A7345FA5L,
			0x96B9509F55F63483L,0x3084D0AFBE224AADL,0x84CA453BC82105E9L,
			0x9B4D589D4A02FECFL,0x3136FBBA8192321AL,0xBD97D146DF9F4E2BL,
			0xB9F8040962D96DA1L,0xEDCF51D37D9621F7L,0x8DECA39042A16FFDL,
			0x9441F853C1504B57L,0x9D1024FD82563051L,0xD34746588B2CE81AL,
			0x6BEA6D58DF62C819L,0x31029351D2E7904EL,0xDDB03A88345FCBDBL,
			0xE62307DB8BADD207L,0x32E5BB8925D326F4L,0x290DDC6CF8B1C598L,
			0x0B7248827F06A000L,0x7679EE16865E48EBL,0x1F3BAB764D8FE8CFL,
			0x3CB0E848F54B3538L,0x956D9C6EECEC3965L,0x73EC71CE0828103AL,
			0x86FBEE17D8845ADDL,0xE60D3AFF0F007CBEL,0x89D3033A550F2A11L,
			0x2E081952F84293A0L,0x974F0F245BD0A5E7L,0xFE79914859C60354L,
			0x8982ACEAFD60F579L,0xE1233F40905919BEL,0xFAB1DFF38F021851L,
			0xC430D68AFFB03AA2L,0x2BB72E416FAA9D5EL,0xAD3A44FE8079644AL,
			0x2E9561FB8B801944L,0x3300A1E2C054CCF4L,0xD8084D497FFF7A10L,
			0xC33E8B2B8828E728L,0xD1B3DEB329DD52C0L,0x31B88B43F606C5FEL,
			0xB4212E76E6DC6095L,0x93324E6411A911AAL,0x5138BEA009DEBCCCL,
			0x5BBA38F1987EECB8L,0xA2FCFCA27891EFB9L,0xFB0C2EF580179636L,
			0x0625A4AE64B186C9L,0xF3CF2FCBC3C58C0FL,0xF5EA740F98982795L,
			0x2564A9C150FFBA8CL,0xE62645E8043D11BFL,0xBF3FCCC3619B3C35L,
			0x73D10F6B60D11815L
		},
		{
			0xA8E12082D7624114L,0x9245F1A7A0997271L,0xAD40A4311D954016L,
			0xC18B37D3FFBEA3CAL,0x9F75CB789BDCC8D1L,0x543457A71981F784L,
			0x7940B92E57823865L,0xEE91834176D1A1CFL,0x265FF2A579D6FAEDL,
			0xB66BF86CB191E358L,0xB0E5C8A0964F04AEL,0x407D0DC8595D3934L,
			0x5DFF91E9D6352EC1L,0xB9D495DD6FE7EBD8L,0x815BCF0EDFEDB01FL,
			0xC02BF2BB2A2A6FA7L,0xCD2F1CEA53958F27L,0x0683592403762063L,
			0x0F26652B5091303BL,0xE43FFB8885812210L,0x3205ADA9F0D3640AL,
			0x22807158D37A7403L,0x8B17A7AAA8121956L,0xE5B239C95AE32EF1L,
			0xA14B442A7EF8C780L,0xE1449CA4F16ADD48L,0xE6079B9D7714A475L,
			0x9A9F36ADB6FCE01CL,0x053444FDEF512622L,0x9E1C5A27A97414F3L,
			0x97158027964BBA33L,0x3577193E76F39380L,0x503C38D0899EE5A7L,
			0x56F8A8386D84D297L,0x46301A01246C0F8AL,0x5340554DD1C86B9AL,
			0x5C02E7A5A846AEADL,0x94AF414D21FFE6CEL,0x7AB72F4275B1701DL,
			0x37800AA8B54E391CL,0x796EC8A820644CDBL,0x3257B2C90337228AL,
			0x36FA9CEEE74E624BL,0x8715D5B910D11736L,0xF450DFB3840B3808L,
			0x877336D0A96226C1L,0xF1B1D7EAF1EF9164L,0xA234ABEB1CC6D6F5L,
			0x5C9378781B51529BL,0x851E350D710845C6L,0x5DD5164748FED079L,
			0x9327398D83D5CD98L,0xB3721C8D87BDA627L,0x21F6D79FC003D794L,
			0x3375B31563AB92B8L,0x83BC7E579D936ECCL,0x3DA3D1EB726E0F38L,
			0x21AEDA1E95BDA637L,0x877FFA5529B29937L,0x432303F07D4DD09EL,
			0xF4970D01770AD733L,0xD9A755DAD173E41FL,0xC8CE6C2632B896E0L,
			0x9C20F5D8623E9196L,0x5B90DCC953048D23L,0xAF339F2A14763FD0L,
			0x4BB23C18895CD2BAL,0x8F9F3E95F22CEA61L,0x374B5A39DB49BB9DL,
			0xE8D0649554DD3240L,0x3686F79BD4AA41F0L,0x92345E7B3F4B9805L,
			0xB9210C91B1B72896L,0x909B40770A717BD4L,0x7165196685C3BA29L,
			0x819E949DC1F68FF5L,0x35981A79BDC9B23DL,0xA8ABA317D6362F42L,
			0x4395E8D918C5D29EL,0x24A9AF953ED557DCL,0x1E8B609F9289CF48L,
			0xCF94872A5E21CC20L,0x88F2A9DFFF3D5B30L,0xF82694A79A525209L,
			0xA6730AD7996CB74DL,0x5960CA440F7B3D2DL,0x10272FCB8474D797L,
			0x11B5C7975713E5C5L,0x881D6984156E7F67L,0x4265E61A40384B34L,
			0x658F30B6F57BFE38L,0x2D30CEC9B7D2141FL,0xB4DE84C92F235B18L,
			0xF6C84891BBD361B1L,0x09AC2B3F99A4DF60L,0x139D9360FEE621FAL,
			0x35E1ACEFD867644FL,0x95D6FE63E2C3ED5BL,0x4127228476DAD854L,
			0x9A030F1D35D0610AL,0xEF67FCA008316188L,0x1AE36D97427BFC2BL,
			0xAA0A541207EBCDD1L,0xF21A86A982BA0A5BL,0xA158626CC13DA4F2L,
			0x8454855F71F362B5L,0xA4A02DA6CD956970L,0x3A1933A20A413562L,
			0x7FB08FD190C1750DL,0x95C9D6D8F0A5597FL,0x905F7A12F8B9F05FL,
			0x14F063982721D6C8L,0xE1C81055EAF345E4L,0x8B02B1F9A7B91569L,
			0x907307319BB4D3A2L,0x22FC429A762E202BL,0x4C8298D584C50557L,
			0x4EE680F9D55E8E1CL,0xA59AADB37A64D4ABL,0x777AEF54255C6BAFL,
			0xB9E9CD12C9F6D03FL,0x0486405D89E12012L,0xA8F32195AD9B848AL,
			0x24536A63053F1662L,0xB8ABDF34B4352046L,0x008E066DDF7B1BF0L,
			0x0937FA7D9D183D1AL,0x1A5396EF432972AFL,0xB07471DD5EA1912AL,
			0xFA5DFDA5DB809F3BL,0x151E0E66B664D54FL,0x1BBC2143B288B9ABL,
			0xABC02F7631CC1927L,0xF9A4AE96F9834DB0L,0xF8193501A12927BAL,
			0x650FCD815770113EL,0xE0CE618E5B52DA6DL,0xB5B152BE30A8B07CL,
			0xDAD8F353972ECC52L,0x99D4AEBC060A6A0FL,0x08E62828868BB696L,
			0x5167F893396D2F36L,0x1F2E9E73C80E8F85L,0xE0AB823094E08AB3L,
			0xDC0BEABAACC05EDDL,0xB6753A97DA5A8058L,0xCFDB118A67D4916FL,
			0x51D9C89214F493F4L,0xC26167305289B384L,0x97160AB71A7E4CEFL,
			0x973179255169012BL,0x7771F3EF6E0C219EL,0x5E09D8BBE3A6AE29L,
			0xA711508CEC25DD3EL,0x04279E53EFF42D64L,0x9B8A1B3518BB56E9L,
			0x221111F31D86B8D4L,0xE97D5EE7ABDE1FB8L,0xBC734F44DF744FACL,
			0xDFC032C98833DA84L,0xF7A162F11B585ECCL,0xA6D1166246CE8EEAL,
			0x0C6BD217156F8815L,0x439D1F080BA22869L,0x652E7C122E040C21L,
			0x1747E6D3B2983347L,0x16B5B9143BDB4F64L,0x0E17A5C775C2EE40L,
			0x53F23FAD5AC19C45L,0x937348E6DECA163CL,0x26D8F5211D908278L,
			0x2CA9D3196906EBAAL,0x64D9C221B876DBE8L,0xF5BD98B39765093AL,
			0xF2EFCBB39AC97411L,0xA01C2699CADA8BBFL,0x6ABC75F617DBEC7CL,
			0x23A862F326261E25L,0x7DEF17B30E43CCF9L,0xE454CB7EC51A1D90L,
			0x8D441891ABA6BEBEL,0x2F2DA70DCC76EF77L,0x439676424FA5A358L,
			0x49BBDCEE76067631L,0xF63A6BD29775D777L,0x5DFDDB9B12E8FCA9L,
			0x09A674E06451281AL,0xE418486E062AC31DL,0x3B180BBE4A1E515AL,
			0xD0CB5C961B63E731L,0x9E8149929AD99C72L,0xEC51E0A5193CA3EBL,
			0xFA21CE56A89D7E17L,0xB08547231034F2EBL,0xB0EEFD1E2BC1FBAAL,
			0x0A8AD2D2753F3F42L,0xE283BEFA009FF8ECL,0xE1D4FC1FF2132D83L,
			0x9DAE527A8DE56FF6L,0x336F47D657E3EFB0L,0x660AAEC7B4DA8111L,
			0xA6DCB60F391303ACL,0xF85A3D5BF5D59398L,0x900E22F664D6875EL,
			0xFA4C029F198DBAADL,0x4D773F305C40752EL,0xEC2386ABD852D287L,
			0x7B1A582851235AEFL,0x207FF1EA50D9D7E1L,0xE969BE8B38C1865CL,
			0x99FA2391FD44F7B7L,0x910EF30F8F61DACEL,0x7E313EAFA58D460EL,
			0xCF3AC88D24E28A32L,0x61B92C3C1990400CL,0x940CE033C5F94165L,
			0xD035E3678AD93195L,0x35CF0C9BA37347E2L,0x7798C3C39EDF6978L,
			0x7FBFD530B558D69BL,0xA6CF9EA4C6FD06A8L,0x56E996F2C3C1629FL,
			0x0E1DC63B951C705CL,0xCC124FBCD97D41DCL,0x400342714ACDD337L,
			0x1365793B1B5E6497L,0x869266F1299C7352L,0xD74CEA89E67B7194L,
			0xC47E30EE84EF357FL,0x0DB3483C5653CD54L,0x8C9A962EB061CFE0L,
			0xBB242F2B4B07D64AL,0x25814925B674FFADL,0x2ADFEB635DD35CC9L,
			0xAF510E642C60DA37L,0x169475C9F7DC6F53L,0xD4D553F641A01782L,
			0xE9FAEAEC2FFE94CEL,0x4936FA1BBBD9097EL,0x7B8A614E856107ABL,
			0xD21A345A686A03B4L,0x50C20AC660123213L,0x6997AFA323E3573DL,
			0x430C76E287C5D8F5L,0x4BFE61429794D597L,0xEDA7F3F70FF8F1A1L,
			0x0A137800E0F0F7E7L,0x9C376D1E98B7BE7CL,0x10F892DF487C4C27L,
			0x812AB00AB6486D79L,0x24C3C23FA0CB549BL,0x5F20AAC86BB637D8L,
			0xBF2FAD7CDA8F11B8L,0x9B14B76D08EF72BEL,0x8A0E0EEC190EBEBAL,
			0x8CF97F6ECE339C68L
		}
	};

	/* Pad the plain text making its length multiple of 16 bytes (128 bits).
	 * The plain text length must be multiple of 16 bytes because the blowfish2
	 * encryption algorithm process blocks of 128 bits of raw data each time. 
	 * Here is how we do it:
	 *   - Determine how many chars must be added to complete 16 bytes (128 bits)
	 *     using the formula "16 - len % mod 16".
	 *   - Add n times the value n to the end of the plain text.
	 *   - The posible values of n are 0x01, ..., 0x0F.
	 *   - If n = 16 then you must add 16 times the value 0x0F.
	 * Based on recommendations from http://www.di-mgt.com.au/cryptopad.html
	 * @params data Raw data that will be encrypted after padding
	 */ 
	private byte[] pad(byte [] data){
		int dataLen = data.length;		
		int padding = 16 - (dataLen % 16);
		byte[] padded = new byte[dataLen + padding];
		for(int i=0;i<dataLen;i++){
		   padded[i]=data[i];
		}
       	for(int i=0;i<padding;i++){
		   padded[dataLen+padding-1-i] = (byte) (PADDING_BYTES[padding] & 0xFF);
		}
		return padded;
	}

	/* Delete pad from the plain text that makes its length mutiple of 16 bytes (128 bits)
	 * Based on recommendations from http://www.di-mgt.com.au/cryptopad.html
     * @params data Raw data that will be encrypted after padding
     */ 
	private byte[] unpad(byte [] data) throws BlowfishException{
		int dataLen = data.length;
		int padding = PADDING_BYTES[data[dataLen-1]];
		boolean isOkPadding = true;
		for(int i=0;i<padding && isOkPadding;i++){
		   isOkPadding = isOkPadding && (data[dataLen-1-i]==padding);
		}
		byte [] unpadded; 
		if (isOkPadding){
			unpadded = new byte[dataLen-padding];
			System.arraycopy(data, 0, unpadded, 0, dataLen-padding);
		}else{
			throw new BlowfishException("Data has a wrong padding.");
		}
		return unpadded;
	}
	
	public byte[] crypt(final byte [] rawData, final boolean encrypt) throws BlowfishException{
		
		//Cloning rawData allow byte modifications
		int rawDataLen = rawData.length;
	    byte [] data = new byte[rawDataLen];
		System.arraycopy(rawData, 0, data, 0, rawDataLen);
		
		//On encryption we must pad
		data = encrypt ? pad(data) : data;
		//System.out.println(" IN: " + getHexString(data));
		
		//Ciphering
		int dataLen = data.length; // padded
		UInt128 block; // 128 bits <=> 16 bytes
		for(int i=0;i<dataLen;i=i+16){
			block = new UInt128();
			for (int j=0;j<16;j++){
				block = block.or(new UInt128((long) data[i+j] & 0xFF).shiftLeft(120-(j*8)));
			}
			if (encrypt){
		    	block = encrypt(block);
		    }else{
				block = decrypt(block);
		    }
			// System.out.println("OUT (B): " + block.toHexString());
			for (int k=0;k<16;k++){
				// To test is padding is working you can comment this line
				data[i+k] = (byte) (block.shiftRight(120-(k*8)).low & 0xFF);
				// System.out.println("OUT (D): " + getHexString(
				//	Arrays.copyOfRange(data, i+k, i+k+1)
				//) + ">>>: "+ (120-(k*8)));
			}
		}
		// System.out.println("OUT (D): " + getHexString(data));
		
		//On decryption we must unpad befor return
		data = encrypt ? data : unpad(data);		
		// System.out.println("OUT: " + getHexString(data));

		return data;
	}

	/* Initialize the round P(s) and S box(es) values XORing them with the passed key string,
	 * changing the state of the cipher from UNITIALIZED to INITIALIZING and then INITIALIZED.
	 * 
	 * @param key A string key from 8 to 512 bytes (64-4096 bits), recomended 2048 bits
	 * @throws BlowfishException
	 */
	public void initialize(byte [] key) throws BlowfishException{
		int keyLen = key.length;

	   	if (keyLen<8 || keyLen>512 || (keyLen % 8 != 0)){ 
			// Blowfish ORIG_P[16+2] => 576 bits long (18*32 bits = 576)
			// => Blowfish.java: Capped to 448 bits (P1 ... P14 each of 32 bits / 4 bytes)
			// Blowfish2 ORIG_P[64+2] => 4224 bits long (66*64 bits = 4224)
			// => Blowfish2.java: Capped to 4096 bits (P1 ... P64 each of 64 bits / 8 bytes)
			throw new BlowfishException(
				"Wrong key size s=" + keyLen + 
				" expected 8 >= s <= 512 bytes and divided exactly by 8"
			);
	   	}

		state = INITIALIZING;

		long keyPart;
	   	int j = 0;
	   	// XOR P1 .. P64 with 64 bits parts of the key
	   	for(int i=0;i<66;i++){
			if (j==keyLen) j = 0;
			keyPart = (
				(((long) key[j+0] & 0xFF) << 56) |
				(((long) key[j+1] & 0xFF) << 48) |
				(((long) key[j+2] & 0xFF) << 40) |
				(((long) key[j+3] & 0xFF) << 32) |
				(((long) key[j+4] & 0xFF) << 24) | 
				(((long) key[j+5] & 0xFF) << 16) |
				(((long) key[j+6] & 0xFF) << 8) | 
				(((long) key[j+7] & 0xFF))
			); //OHO 
			j=j+8;
			P[i] = (P[i] ^ keyPart);
	   }

	   	//Prepare the keys (encrypt P[*])
		UInt128 T = new UInt128();
		for (int i = 0; i<66; i=i+2){
			T = encrypt(T);
			P[i] = T.high;
			P[i+1] = T.low;
		}

	    //Prepare the sboxes (encrypt S[*][*]
		for (int k = 0; k < 8; k++){
			for (int i = 0; i<256; i=i+2){
				T = encrypt(T);
				S[k][i] = T.high;
				S[k][i+1] = T.low;
		    }
	    }
	    
	    state = INITIALIZED;
    }

	/* This is Feistel(x) function implementation of blowfish algorithm
	 * @param x A long primitive type (unsigned)
	 * @return 64 bits of encrypted data
	 */
	private long f(long x){		
		int a = (int) ((x >>> 56) & 0xFF);
		int b = (int) ((x >>> 48) & 0xFF);
		int c = (int) ((x >>> 40) & 0xFF);
		int d = (int) ((x >>> 32) & 0xFF);
		int e = (int) ((x >>> 24) & 0xFF);
		int f = (int) ((x >>> 16) & 0xFF);
		int g = (int) ((x >>> 8) & 0xFF);
		int h = (int) (x & 0xFF);
		long y;

		// & 0xffffffff (Needed to avoid overflow from 2^63-1 limit of long)
		// and avoid using BigInteger (in Blowfish we used long instead of int)
		
		y = S[0][a];
		y = (y + S[1][b]) & 0xFFFFFFFFFFFFFFFFL;
		y = y ^ S[2][c];
		y = (y + S[3][d]) & 0xFFFFFFFFFFFFFFFFL;
		y = y ^ S[4][e];
		y = (y + S[5][f]) & 0xFFFFFFFFFFFFFFFFL;
		y = y ^ S[6][g];
		y = (y + S[7][h]) & 0xFFFFFFFFFFFFFFFFL;
		
		/*
		BigInteger POW2TO64 = new BigInteger("18446744073709551616");
		y = S[0][a];
		y = BigInteger.valueOf(y + S[1][b]).mod(POW2TO64).low;
		y = y ^ S[2][c];
		y = BigInteger.valueOf(y + S[3][d]).mod(POW2TO64).low;
		y = y ^ S[4][e];
		y = BigInteger.valueOf(y + S[5][f]).mod(POW2TO64).low;
		y = y ^ S[6][g];
		y = BigInteger.valueOf(y + S[7][h]).mod(POW2TO64).low; 
		*/
		return y;
	}

	/* Encrypt a BigInteger (128 bits) of raw data
	 * @param x BigInteger bits of plain text data
	 * @return BigInteger bits of encrypted data
	 */
	private UInt128 encrypt(UInt128 x) throws BlowfishException{
	    long xL; //"Unsigned" long
	    long xR; //"Unsigned" long
	    long xLSaved; //"Unsigned" long
	    if (state != UNINITIALIZED){
			//xL and xR must be unsigned
			xL = x.high;
			xR = x.low;
			
			for (int i = 0; i < 64; i++){
				//Xoring
				xL = xL ^ P[i]; //Not signed operands
				xR = f(xL) ^ xR; //Not signed operands
				//Swapping
				xLSaved = xL;
				xL = xR;
				xR = xLSaved;
			}

			//Undo last swaping 
			xLSaved = xL;
			xL = xR;
			xR = xLSaved;

			xR = xR ^ P[64]; //Not signed operands
			xL = xL ^ P[65]; //Not signed operands

			 //Not signed operands and return value
			 return new UInt128(
				xL & 0xFFFFFFFFFFFFFFFFL,
				xR & 0xFFFFFFFFFFFFFFFFL
			);
	    }else{

			throw new BlowfishException("Encryption key has not been initialized");

	    }
	}

	/* Decrypts a BigInteger (128 bits, maybe signed) of raw data
	 * @param x BigInteger bits of plain text data
	 * @return long bits of unencrypted data
	 */
	private UInt128 decrypt(UInt128 x) throws BlowfishException{

	    long xL; //"Unsigned" long
	    long xR; //"Unsigned" long
	    long xLSaved; //"Unsigned" long

	    if (state != UNINITIALIZED){
			//xL and xR must be unsigned
			xL = x.high;
			xR = x.low;

			for (int i = 65; i > 1; i--){
				//Xoring
				xL = xL ^ P[i]; //Not signed operands
				xR = f(xL) ^ xR; //Not signed operands
				//Swapping 
				xLSaved = xL;
				xL = xR;
				xR = xLSaved;
			}

			//Undo last swapping 
			xLSaved = xL;
			xL = xR;
			xR = xLSaved;
			
			xR = xR ^ P[1]; //Not signed operands
			xL = xL ^ P[0]; //Not signed operands
			
			//Not signed operands and return value
			return new UInt128(
				xL & 0xFFFFFFFFFFFFFFFFL,
				xR & 0xFFFFFFFFFFFFFFFFL
			);

	    }else{

			throw new BlowfishException("Encryption key has not been initialized");

	    }

	}

	public static final String getHexString(byte[] b) {
			String hexString = "";
			for (int i=0; i < b.length; i++)
					hexString += Integer.toString( ( b[i] & 0xff ) + 0x100, 16).substring(1).toUpperCase();
			return hexString;
	}


}
